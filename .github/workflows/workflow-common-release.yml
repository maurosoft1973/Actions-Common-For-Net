name: Common .NET build and release workflow

on:
  workflow_call:
    inputs:
      configuration:
        required: true
        type: string
        description: "The build configuration. Eg debug/release"

      productNamespacePrefix:
        required: false
        default: ""
        type: string
        description: "The namespace prefix used to exclude unrelated items for code coverage"

      useVisualStudioPreview:
        required: false
        default: false
        type: boolean
        description: "If the Visual Studio preview edition is used"

      useMauiCheckDotNetTool:
        required: false
        default: false
        type: boolean
        description: "Use the Maui Check dotnet tool to make sure Maui is up to date"

      solutionFile:
        required: false
        type: string
        description: "Optional name of a solution file founded in the srcFolder"

      srcFolder:
        required: false
        type: string
        default: "./"
        description: "The folder where the source can be found"

      performTests:
        required: false
        default: true
        type: boolean
        description: "If tests need to be conducted"

      testProjectsFile:
        required: false
        default: "**/*Test*.csproj"
        type: string
        description: "The path relative of srcFolder where test projects file found"

      coverletOutputformat:
        required: false
        default: "cobertura"
        type: string
        description: "Supported Formats: json, lcov, opencover, cobertura (default), teamcity. You can specify multiple output formats by separating them with a comma (,)"

      useNBGV:
        required: false
        default: true
        type: boolean
        description: "If uses NBGV"

      createArtifacts:
        required: false
        default: true
        type: boolean
        description: "If creates Artifacts"

      installWorkflows:
        required: false
        default: false
        type: boolean
        description: "If installs Workflows"

      dotNetBuild:
        required: false
        default: true
        type: boolean
        description: "If to use a SDK build"

    secrets:
      SIGN_CLIENT_USER_ID:
        required: true
      SIGN_CLIENT_SECRET:
        required: true
      SIGN_CLIENT_CONFIG:
        required: true
      NUGET_API_KEY:
        required: true
      CODECOV_TOKEN:
        required: true

jobs:
  build-and-release:
    environment:
      name: release 
    runs-on: windows-2022
    outputs:
      nbgv: ${{ steps.nbgv.outputs.SemVer2 }}
    steps:        
    - name: Get Latest Visual Studio Version
      if: inputs.useVisualStudioPreview == true
      shell: bash
      run: |
        dotnet tool update -g dotnet-vs
        vs where release
        vs update release Enterprise
        vs modify release Enterprise +mobile +desktop +uwp +web
        vs where release

    - name: Setup Java JDK
      uses: actions/setup-java@v4.2.1
      with:
        distribution: 'microsoft'
        java-version: '11'

    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        lfs: true

    - name: Setup .NET 6/7/8
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
            6.0.x
            7.0.x
            8.0.x

    - name: Install DotNet workloads
      if: inputs.installWorkflows == true
      shell: bash
      run: |
        dotnet workload install android ios tvos macos maui maccatalyst
        
    - name: Run Maui Installation Check
      if: inputs.useMauiCheckDotNetTool == true
      shell: bash
      run: |
        dotnet tool install -g Redth.Net.Maui.Check
        maui-check --non-interactive --fix
        
    - name: Add MSBuild to PATH
      if: inputs.dotNetBuild != true
      uses: microsoft/setup-msbuild@v2.0.0
      with:
        vs-prerelease: true

    - name: NBGV
      if: inputs.useNBGV == true
      id: nbgv
      uses: dotnet/nbgv@master
      with:
        setAllVars: true

    - name: Install NuGet 
      uses: nuget/setup-nuget@v2
      with:
        nuget-api-key: ${{ secrets.NuGetAPIKey }}
        nuget-version: '6.x'

    - name: NuGet Restore 
      run: nuget restore ${{ inputs.solutionFile }}
      working-directory: ${{ inputs.srcFolder }}

    - name: Build with MsBuild
      if: inputs.dotNetBuild != true
      run: msbuild /t:build,pack /nowarn:MSB4011 /maxcpucount /p:NoPackageAnalysis=true /verbosity:minimal /p:Configuration=${{ inputs.configuration }} ${{ inputs.solutionFile }}
      working-directory: ${{ inputs.srcFolder }}

    - name: Build with DotNet
      if: inputs.dotNetBuild == true
      run: dotnet pack --no-restore --configuration ${{ inputs.configuration }} ${{ inputs.solutionFile }}
      working-directory: ${{ inputs.srcFolder }}


