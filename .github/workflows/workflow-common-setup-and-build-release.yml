name: Common .NET setup and build workflow release

on:
    workflow_call:
        inputs:
            configuration:
                required: true
                default: "Release"
                type: string
                description: "The build configuration.(Ex debug/release)"

            useVisualStudioPreview:
                required: false
                default: false
                type: boolean
                description: "If true, the Visual Studio preview edition is used"

            useMauiCheckDotNetTool:
                required: false
                default: false
                type: boolean
                description: "If true, use the Maui Check dotnet tool to make sure Maui is up to date"

            useNBGV:
                required: false
                default: true
                type: boolean
                description: "If true, uses NBGV"

            installWorkflows:
                required: false
                default: false
                type: boolean
                description: "If true, installs Workflows"

            dotNetBuild:
                required: false
                default: true
                type: boolean
                description: "If true, to use a SDK build"

            srcFolder:
                required: false
                type: string
                default: "./"
                description: "The folder where the source can be found"

            solutionFile:
                required: false
                type: string
                description: "Optional name of a solution file founded in the srcFolder"

            productNamespacePrefix:
                required: false
                default: ""
                type: string
                description: "The namespace prefix used to exclude unrelated items for code coverage"

            performTests:
                required: false
                default: true
                type: boolean
                description: "If true, tests need to be conducted"

            testProjectsFile:
                required: false
                default: "**/*Test*.csproj"
                type: string
                description: "The path relative of srcFolder where test projects file found"

            coverletOutputformat:
                required: false
                default: "cobertura"
                type: string
                description: "Supported Formats: json, lcov, opencover, cobertura (default), teamcity. You can specify multiple output formats by separating them with a comma (,)"

            createNugetArtifacts:
                required: false
                default: false
                type: boolean
                description: "If true, create Nuget Artifacts"

            signNugetArtifacts:
                required: false
                default: false
                type: boolean
                description: "If true, sign Nuget Artifacts"

            signProjectName:
                required: false
                default: ""
                type: string
                description: "Sign Name of project for tracking."

            signDescription:
                required: false
                default: ""
                type: string
                description: "Sign Description of the project."

            createRelease:
                required: false
                default: false
                type: boolean
                description: "If true, create new release."

            createChangelog:
                required: false
                default: false
                type: boolean
                description: "If true, create changelog from commit message."

            publishNuget:
                required: false
                default: false
                type: boolean
                description: "If true, publish artifacts to Nuget"

            publishOnSelfHostedNuget:
                required: false
                default: false
                type: boolean
                description: "If true, publish artifacts to self hosted Nuget"

        secrets:
            SIGN_CLIENT_USER_ID:
                required: false
            SIGN_CLIENT_SECRET:
                required: false
            SIGN_CLIENT_CONFIG:
                required: false
            NUGET_API_KEY:
                required: true
            CODECOV_TOKEN:
                required: true
            CUSTOM_NUGET_SOURCE_URL:
                required: false
                description: "Url for self nuget (Ex: https://nuget.mydomain.com/v3/index.json)"
            CUSTOM_NUGET_API_KEY:
                required: false
                description: "ApiKey for self nuget"

jobs:
    build:
        name: "Build Test Coverage Artifacts"
        runs-on: windows-2022
        outputs:
            nbgv: ${{ steps.nbgv.outputs.SimpleVersion }}
        steps:
            - name: Get Latest Visual Studio Version
              if: inputs.useVisualStudioPreview == true
              shell: bash
              run: |
                dotnet tool update -g dotnet-vs
                vs where release
                vs update release Enterprise
                vs modify release Enterprise +mobile +desktop +uwp +web
                vs where release

            - name: Setup Java JDK
              uses: actions/setup-java@v4.2.1
              with:
                distribution: "microsoft"
                java-version: "11"

            - name: Checkout
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
                lfs: true

            - name: Setup .NET 6/7/8
              uses: actions/setup-dotnet@v4
              with:
                dotnet-version: |
                  6.0.x
                  7.0.x
                  8.0.x

            - name: Install DotNet workloads
              if: inputs.installWorkflows == true
              shell: bash
              run: |
                dotnet workload install android ios tvos macos maui maccatalyst

            - name: Run Maui Installation Check
              if: inputs.useMauiCheckDotNetTool == true
              shell: bash
              run: |
                dotnet tool install -g Redth.Net.Maui.Check
                maui-check --non-interactive --fix

            - name: Add MSBuild to PATH
              if: inputs.dotNetBuild != true
              uses: microsoft/setup-msbuild@v2.0.0
              with:
                vs-prerelease: true

            - name: NBGV
              if: inputs.useNBGV == true
              id: nbgv
              uses: dotnet/nbgv@master
              with:
                setAllVars: true

            - name: Install Nuget
              uses: nuget/setup-nuget@v2
              with:
                nuget-api-key: ${{ secrets.NuGetAPIKey }}
                nuget-version: "6.x"

            - name: Restore Package Nuget from Cache
              uses: actions/cache@v1
              with:
                path: ~/.nuget/packages
                key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
                restore-keys: |
                  ${{ runner.os }}-nuget-

            - name: Restore Nuget
              run: nuget restore ${{ inputs.solutionFile }}
              working-directory: ${{ inputs.srcFolder }}

            - name: Build with MsBuild
              if: inputs.dotNetBuild != true
              run: msbuild /t:build,pack /nowarn:MSB4011 /maxcpucount /p:NoPackageAnalysis=true /verbosity:minimal /p:Configuration=${{ inputs.configuration }} ${{ inputs.solutionFile }}
              working-directory: ${{ inputs.srcFolder }}

            - name: Build with dotnet
              if: inputs.dotNetBuild == true
              run: dotnet build --no-restore --configuration ${{ inputs.configuration }} ${{ inputs.solutionFile }}
              working-directory: ${{ inputs.srcFolder }}

            - name: Generate pack with dotnet
              if: inputs.dotNetBuild == true
              run: dotnet pack --no-restore --configuration ${{ inputs.configuration }} ${{ inputs.solutionFile }}
              working-directory: ${{ inputs.srcFolder }}

            - name: Run Unit Tests and Generate Coverage Report
              uses: glennawatson/coverlet-msbuild@v2.1
              if: inputs.performTests == true
              with:
                project-files: ${{ inputs.srcFolder }}${{ inputs.testProjectsFile }}
                no-build: true
                exclude-filter: "[${{inputs.productNamespacePrefix}}.*.Test.*]*,[${{inputs.productNamespacePrefix}}.Test]*,[${{inputs.productNamespacePrefix}}.TestRunner.*]*"
                include-filter: "[${{inputs.productNamespacePrefix}}*]*"
                output-format: ${{ inputs.coverletOutputformat }}
                configuration: ${{ inputs.configuration }}

            - name: Upload Code Coverage to CoveCov
              uses: codecov/codecov-action@v4
              if: inputs.performTests == true
              with:
                fail_ci_if_error: true
                verbose: true
              env:
                CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

            - name: Create NuGet Artifacts
              if: inputs.createNugetArtifacts == true
              uses: actions/upload-artifact@master
              with:
                name: nuget
                path: "**/*.nupkg"

            - name: Save SignClient Configuration
              if: inputs.signNugetArtifacts == true
              run: 'echo "$SIGN_CLIENT_CONFIG" > SignPackages.json'
              shell: bash
              env:
                SIGN_CLIENT_CONFIG: ${{secrets.SIGN_CLIENT_CONFIG}}

            - name: Sign NuGet Artifacts
              if: inputs.signNugetArtifacts == true
              uses: glennawatson/signclient@v1
              with:
                input-files: '**/*.nupkg'
                sign-client-secret: ${{ secrets.SIGN_CLIENT_SECRET }}
                sign-client-user: ${{ secrets.SIGN_CLIENT_USER_ID }}
                project-name: ${{ inputs.signProjectName }}
                description: ${{ inputs.signDescription }}
                config-file: SignPackages.json

            # Based on the last tag and commits since main branch
            # (change the branch as needed), this action will determine
            # the next semver version. If there are no commits since
            # the last tag, it will warn (by default it fails)
            # and not create a new tag.
            - name: Get Next Semver Version
              id: semver
              uses: ietf-tools/semver-action@v1
              with:
                token: ${{ secrets.GITHUB_TOKEN }}
                branch: master
                noVersionBumpBehavior: warn

            # We will use semver action outputs as a conditional,
            # we can skip the rest of the job if there are no semver
            # changes since the last tag. Commits that do not have
            # a type, i.e. "feat:" or "fix:" will be ignored.
            # Also, less meaningful types like "chore" or "docs"
            # will be ignored too. This step can be easily changed
            # from action to direct API call if you want to customize it.
            - name: Create Tag
              uses: rickstaa/action-create-tag@v1
              if: ${{ steps.semver.outputs.next != '' }}
              with:
                tag: ${{ steps.semver.outputs.next }}
                tag_exists_error: false
                message: "Automatic tag ${{ steps.semver.outputs.next }}"

            # Based on the commits since the last tag, we will
            # generate a changelog and commit it to the repository.
            # You can customize commit types that will be ignored.
            # We use the default excludes, widened with the "release"
            # type, I wanted to see them at a glance so they are
            # copied here.
            - name: Update CHANGELOG
              id: changelog
              uses: requarks/changelog-action@v1
              if: ${{ steps.semver.outputs.next != '' }}
              with:
                token: ${{ github.token }}
                fromTag: ${{ steps.semver.outputs.next }}
                toTag: ${{ steps.semver.outputs.current }}
                excludeTypes: "chore,ci,docs,style,test,release"

            # Cleaning up, we will use our newly related
            # tag to create a release. Changelog output
            # from the previous action is used as a body.
            - name: Create Release
              uses: ncipollo/release-action@v1
              id: release
              if: ${{ steps.semver.outputs.next != '' }}
              with:
                allowUpdates: true
                draft: false
                makeLatest: true
                name: ${{ steps.semver.outputs.next }}
                tag: ${{ steps.semver.outputs.next }}
                body: ${{ steps.changelog.outputs.changes }}
                token: ${{ secrets.GITHUB_TOKEN }}

            # Commit the changelog to the repository. We do it
            # here to make sure that other actions were successfull.
            # Also, [skip ci] is a Github Actions specific commit
            # message, it will prevent the action from triggering
            # another run, just in case. I won't go into the details
            # why the action would not trigger anyway.
            - name: Commit CHANGELOG.md
              uses: stefanzweifel/git-auto-commit-action@v4
              if: ${{ steps.semver.outputs.next != '' }}
              with:
                branch: main
                commit_message: "release: changelog for ${{ steps.semver.outputs.next }} [skip ci]"
                file_pattern: CHANGELOG.md

            # - name: Create Release
            #   uses: ncipollo/release-action@v1.12.0
            #   if: inputs.createRelease == true
            #   with:
            #     allowUpdates: true
            #     draft: false
            #     makeLatest: true
            #     name: v${{ steps.nbgv.outputs.SimpleVersion }}
            #     body: ${{ steps.changelog.outputs.changes }}
            #     token: ${{ secrets.GITHUB_TOKEN }}

            # - name: Update CHANGELOG
            #   id: changelog
            #   uses: requarks/changelog-action@v1
            #   if: inputs.createChangelog == true
            #   with:
            #     token: ${{ secrets.GITHUB_TOKEN }}
            #     includeInvalidCommits: true
            #     tag: v${{ steps.nbgv.outputs.SimpleVersion }}
            #     reverseOrder: true

            # - name: Commit CHANGELOG.md
            #   uses: stefanzweifel/git-auto-commit-action@v4
            #   if: inputs.createChangelog == true
            #   with:
            #     branch: master
            #     commit_message: 'docs: update CHANGELOG.md for v${{ steps.nbgv.outputs.SimpleVersion }} [skip ci]'
            #     file_pattern: CHANGELOG.md

            - name: Publish to Nuget
              if: inputs.publishNuget == true
              env:
                NUGET_AUTH_TOKEN: ${{ secrets.NUGET_API_KEY }}
                SOURCE_URL: https://api.nuget.org/v3/index.json
              run: |
                dotnet nuget push -s ${{ env.SOURCE_URL }} -k ${{ env.NUGET_AUTH_TOKEN }} --skip-duplicate **/*.nupkg

            - name: Publish to Selft Hosted Nuget Server
              if: inputs.publishOnSelfHostedNuget == true
              env:
                SELF_HOSTED_NUGET_AUTH_TOKEN: ${{ secrets.SELF_HOSTED_NUGET_API_KEY }}
                SELF_HOSTED_SOURCE_URL: ${{ secrets.SELF_HOSTED_NUGET_SOURCE_URL }}
              run: |
                dotnet nuget push -s ${{ env.SELF_HOSTED_SOURCE_URL }} -k ${{ env.SELF_HOSTED_NUGET_AUTH_TOKEN }} --skip-duplicate **/*.nupkg
